pipeline {
    agent any

    tools {
        jdk 'JDK21'                  // JDK configured in Jenkins
        maven 'Maven-3.9.9'          // Maven configured in Jenkins
    }

    environment {
        APP_NAME = "retail-banking"
        APP_PORT = "8080"
        DEPLOY_DIR = "/opt/${APP_NAME}"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/seshuadi969/retail-banking.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh '''
                    echo "Packaging application..."
                    ls -l target/
                '''
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    echo "Deploying application..."

                    # Create deployment directory if not exists
                    sudo mkdir -p $DEPLOY_DIR

                    # Stop any running instance
                    if pgrep -f "$APP_NAME.jar"; then
                        echo "Stopping running application..."
                        pkill -f "$APP_NAME.jar" || true
                    fi

                    # Copy latest jar to deployment directory
                    JAR_FILE=$(ls target/*.jar | head -n 1)
                    cp $JAR_FILE $DEPLOY_DIR/$APP_NAME.jar

                    # Start application in background
                    nohup java -jar $DEPLOY_DIR/$APP_NAME.jar --server.port=$APP_PORT > $DEPLOY_DIR/app.log 2>&1 &
                '''
            }
        }

        stage('Verify') {
            steps {
                sh '''
                    echo "Waiting for application to start..."
                    sleep 10
                    curl -I http://localhost:$APP_PORT || true
                '''
            }
        }
    }

    post {
        success {
            echo "✅ Deployment successful! Application running on port $APP_PORT"
        }
        failure {
            echo "❌ Pipeline failed! Check logs."
        }
    }
}

