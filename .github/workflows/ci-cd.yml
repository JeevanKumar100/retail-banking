name: CI/CD — build → docker → deploy

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/retail-banking

jobs:
  build:
    name: Build & test (Maven)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven
      - name: Build & run tests
        run: mvn -B clean verify

  docker_build_and_push:
    name: Build Docker image & push
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to server (SSH)
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to remote server (pull image & run)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e
            mkdir -p "${{ secrets.SERVER_DEPLOY_DIR }}"
            cd "${{ secrets.SERVER_DEPLOY_DIR }}"
            # Login to Docker Hub (so server can pull private images)
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            # Pull image and update containers
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/retail-banking:latest
            docker compose -f docker-compose.prod.yml pull || true
            docker compose -f docker-compose.prod.yml up -d --remove-orphans --force-recreate
